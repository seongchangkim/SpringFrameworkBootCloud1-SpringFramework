<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:security="http://www.springframework.org/schema/security"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
	
	<!-- 2021-07-15 Bcrypt 방식을 이용한 비밀번호 처리 추가  -->
	<bean id="bcryptPasswordEncoder" 
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean> 
	
	<!-- 2021-07-16 로그인 성공후 처리 Bean 등록 -->
	<!--  <bean id="loginSuccessHandler" 
		  class="com.cloud.porforio.security.LoginSuccessHandler">
	</bean> -->
	
	<!-- 
		2021-07-14 로그인 권한 설정 추가
		2021-07-15 로그인 커스텀 마이징 설정 추가 
		authentication-success-handler-ref = "loginSuccessHandler"
		2021-07-17 토큰 생성 비활성화
		2021-07-19 로그인 성공 url 설정 및 활성화
		login-processing-url : 로그인 페이지 주소를 지정
		default-target-url : 로그인 성공시 호출한 주소 지정
		authentication-failture-url : 로그인 실패시 호출한 주소 지정
		always-use-default-target="true" : default-target-url를 설정과 동시에 설정해야 함
	--> 
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true"/> 
		<security:intercept-url pattern="/login" access="isAnonymous()"/>
		<security:intercept-url pattern="/cloud/register" access="isAnonymous()"/>
		<security:intercept-url pattern="/cloud/findingId" access="isAnonymous()"/>
		<security:intercept-url pattern="/cloud/findingPassword" access="isAnonymous()"/>
		<security:intercept-url pattern="/cloud/**" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		<security:form-login login-page="/login" login-processing-url="/login" default-target-url="/cloud/"
							 authentication-failure-url = "/login" always-use-default-target="true"
							 username-parameter="id" password-parameter="password" />
	  	<security:session-management invalid-session-url="/login"> 
	  		<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/> 
	  	</security:session-management> 
		<!-- 
			2021-07-19 spring security로 로그아웃 기능 구현
			logout-url : 로그아웃 처리에 대한 url. form태그의 action 속성에 지정한 값.(default: POST /logout)
			logout-success-url : 로그아웃 	성공 시, 이동할 url(cloud/login) 
			invalidate-session : 로그아웃 성공 시, 삭제할 쿠키 이름 지정
			success-handler-ref : 로그아웃 성공 시, logout-success-url이 아닌 핸들러로 리다이렉트
		 -->
		<security:logout logout-url="/logout" delete-cookies="JSESSIONID"/> 
	</security:http>
	
	<!-- 2021-07-17 spring security css,js 적용 -->
	<!--  <security:http pattern="/resources/**" security="none"/> -->
	
	
				
	<security:authentication-manager>
		<security:authentication-provider>
			
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select id, password, 1 as enabled from user where id = ?"
				authorities-by-username-query = "select id, auth from user_auth where id = ?"/>
				
			<!-- 2021.07.18 bcrypt를 이용한 비밀번호 암호화 처리  -->
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
